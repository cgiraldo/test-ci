name: build images

on:
  release:
    types: [published]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          NAME=$(echo ${{ github.event.release.tag_name }} | rev | cut -d- -f2- | rev)
          VERSION=$(echo ${{ github.event.release.tag_name }} | rev | cut -d- -f1 | rev)
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${NAME}
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          # Set output parameters.
          echo "::set-output name=name::${NAME}"
          echo "::set-output name=version::${VERSION}"  
          echo "::set-output name= tags::${TAGS}"
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: |
           echo "$GITHUB_CONTEXT"
           echo "$STEPS_CONTEXT"
            
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ steps.prep.outputs.name }}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }} 
